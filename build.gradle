buildscript {
    ext {
        // Maven
        group = 'moe.pine'
        version = '0.2.0'
        description = 'Utilities for SpringFramework'
        websiteUrl = 'https://github.com/pine/spring-util'
        gitUrl = 'https://github.com/pine/spring-util.git'
        inceptionYear = '2021'

        // Dependencies
        assertjVersion = '3.21.0'
        junitVersion = '5.8.2'
        mockitoVersion = '4.2.0'
        springVersion = '6.0.0'
    }
    repositories {
        mavenCentral()
        maven { url 'https://plugins.gradle.org/m2/' }
    }
    dependencies {
        // classpath 'com.jfrog.bintray.gradle:gradle-bintray-plugin:1.7.3'
        classpath 'net.rdrei.android.buildtimetracker:gradle-plugin:0.11.0'
    }
}

plugins {
  id 'com.github.spotbugs' version '6.0.26'
}


// ----- Project ------------------------------------------

apply plugin: 'java-library'
apply plugin: 'idea'

group rootProject.ext.group
version rootProject.ext.version
description rootProject.ext.description

sourceCompatibility = JavaVersion.VERSION_17
targetCompatibility = JavaVersion.VERSION_17

java {
    withJavadocJar()
    withSourcesJar()
}

javadoc {
    if (JavaVersion.current().isJava9Compatible()) {
        options.addBooleanOption('html5', true)
    }
}

compileJava {
    options.encoding = 'UTF-8'
    options.compilerArgs << '-Xlint'
}

repositories {
    mavenCentral()
}

dependencies {
    // Spring Framework
    compileOnly "org.springframework:spring-core:$springVersion"
    testImplementation "org.springframework:spring-core:$springVersion"
    compileOnly 'com.google.code.findbugs:jsr305:3.0.2'

    // Guava
    testImplementation 'com.google.guava:guava:31.0.1-jre'

    // AssertJ
    testImplementation "org.assertj:assertj-core:$assertjVersion"

    // JUnit
    testImplementation "org.junit.jupiter:junit-jupiter-api:$junitVersion"
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

    // Mockito
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation "org.mockito:mockito-inline:$mockitoVersion"
    testImplementation "org.mockito:mockito-junit-jupiter:$mockitoVersion"
}

test {
    useJUnitPlatform()
}


// ----- JaCoCo -------------------------------------------

apply plugin: 'jacoco'

jacoco {
    toolVersion = '0.8.7'
}

jacocoTestReport {
    reports {
        xml.required = true
        html.required = true
    }
}


// ----- SpotBugs -----------------------------------------

spotbugs {
    toolVersion = '4.8.6'
    excludeFilter = file("${project.rootDir}/config/findbugs-exclude.xml")
}

spotbugsMain {
    reports {
        xml {
            required = false
        }
        html {
            required = true
        }
    }
}

spotbugsTest {
    enabled = false
}


// ----- PMD ----------------------------------------------

apply plugin: 'pmd'

pmd {
    toolVersion = '6.41.0'
    consoleOutput = true
    ruleSetFiles = rootProject.files("config/pmd-ruleset.xml")
    ruleSets = []
}
pmdMain {
    enabled = true
}
pmdTest {
    enabled = false
}


// ----- Build Time Tracker -------------------------------

apply plugin: 'build-time-tracker'

buildtimetracker {
    reporters {
        summary {
            ordered true
            barstyle 'ascii'
        }
    }
}


// ----- Maven Central ------------------------------------

apply from: "${rootProject.projectDir}/gradle/sonatype.gradle"

